// Copyright 2020-2021 the Pinniped contributors. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "go.pinniped.dev/generated/1.20/apis/supervisor/config/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StarlarkFunctionLister helps list StarlarkFunctions.
// All objects returned here must be treated as read-only.
type StarlarkFunctionLister interface {
	// List lists all StarlarkFunctions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.StarlarkFunction, err error)
	// StarlarkFunctions returns an object that can list and get StarlarkFunctions.
	StarlarkFunctions(namespace string) StarlarkFunctionNamespaceLister
	StarlarkFunctionListerExpansion
}

// starlarkFunctionLister implements the StarlarkFunctionLister interface.
type starlarkFunctionLister struct {
	indexer cache.Indexer
}

// NewStarlarkFunctionLister returns a new StarlarkFunctionLister.
func NewStarlarkFunctionLister(indexer cache.Indexer) StarlarkFunctionLister {
	return &starlarkFunctionLister{indexer: indexer}
}

// List lists all StarlarkFunctions in the indexer.
func (s *starlarkFunctionLister) List(selector labels.Selector) (ret []*v1alpha1.StarlarkFunction, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StarlarkFunction))
	})
	return ret, err
}

// StarlarkFunctions returns an object that can list and get StarlarkFunctions.
func (s *starlarkFunctionLister) StarlarkFunctions(namespace string) StarlarkFunctionNamespaceLister {
	return starlarkFunctionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StarlarkFunctionNamespaceLister helps list and get StarlarkFunctions.
// All objects returned here must be treated as read-only.
type StarlarkFunctionNamespaceLister interface {
	// List lists all StarlarkFunctions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.StarlarkFunction, err error)
	// Get retrieves the StarlarkFunction from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.StarlarkFunction, error)
	StarlarkFunctionNamespaceListerExpansion
}

// starlarkFunctionNamespaceLister implements the StarlarkFunctionNamespaceLister
// interface.
type starlarkFunctionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StarlarkFunctions in the indexer for a given namespace.
func (s starlarkFunctionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StarlarkFunction, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StarlarkFunction))
	})
	return ret, err
}

// Get retrieves the StarlarkFunction from the indexer for a given namespace and name.
func (s starlarkFunctionNamespaceLister) Get(name string) (*v1alpha1.StarlarkFunction, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("starlarkfunction"), name)
	}
	return obj.(*v1alpha1.StarlarkFunction), nil
}
